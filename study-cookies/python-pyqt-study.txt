# PyQt 入門* [PREV_LINK]()* [NEXT_LINK]()-----## 大綱* 參考網站* 筆記-----### 參考網站* [PyQt 入門，用 Python 寫第一支 GUI](https://zhung.com.tw/article/pyqt%E5%85%A5%E9%96%80%E7%94%A8python%E5%AF%AB%E7%AC%AC%E4%B8%80%E6%94%AFgui/)* [Pyinstaller — 打包Python code](https://medium.com/ching-i/pyinstaller-%E6%89%93%E5%8C%85python-code-8bb7f376f05e)-----### 筆記#### PyQt 入門，用 Python 寫第一支 GUIhttps://zhung.com.tw/article/pyqt%E5%85%A5%E9%96%80%E7%94%A8python%E5%AF%AB%E7%AC%AC%E4%B8%80%E6%94%AFgui/**環境建置順序:**1. Python 3.7+2. PyQt5 (在CMD輸入`pip install PyQt5)3. 下載安裝 Qt Designer(有分win跟mac版)**開發流程大致如下:**1. 先用 Qt Designer 設計好界面，產生一個 .ui 檔2. 進 Terminal 輸入以下指令產生可引入的 .py 檔(主程式產生畫面用) `pyuic5 -x example.ui -o example_ui.py`3. 建立一支主程式 .py 檔引入上一步做好的 .py 檔們，就可以執行主程式囉！**實作練習**1. 開啟 Qt Designer，New一份UI設計檔，然後在"Template"選擇"Main Window"，按下"Create"會出現一個空白的視窗畫面，這時直接存檔就可以得到我們所需要的第一個.ui檔案，這邊命名為example.ui。2. example.ui面描述的是GUI的各種資訊，我們接下來要把它轉成.py檔供我們的Python GUI程式使用，轉檔步驟就是開啟cmd輸入 `pyuic5 -x example.ui -o example.py` 即完成。3. 再來就是編寫一支.py程式來引入example.py，這邊我們建立一個檔案命名為 example_main.py，並貼入下列代碼:```from PyQt5 import QtWidgetsfrom PyQt5.QtWidgets import *from PyQt5.QtCore import *from PyQt5.QtGui import *import example_ui as uiclass Main(QMainWindow, ui.Ui_MainWindow):    def __init__(self):         super().__init__()         self.setupUi(self)if __name__ == '__main__':    import sys    app = QtWidgets.QApplication(sys.argv)    window = Main()    window.show()    sys.exit(app.exec_())```#### 用 Qt Designer 來設計 PyQt GUI 應用程式界面https://zhung.com.tw/article/%e7%94%a8qt-designer%e4%be%86%e8%a8%ad%e8%a8%88pyqt-gui%e6%87%89%e7%94%a8%e7%a8%8b%e5%bc%8f%e7%95%8c%e9%9d%a2/熟悉 Qt Designer 的界面https://i.imgur.com/798o3bK.png並試著用 Qt Designer 設計一個計算機的介面https://i.imgur.com/vE4vj5f.png#### PyQt5 讓 GUI 動起來為元件綁定 Event 觸發 Functionhttps://zhung.com.tw/article/pyqt5-%e8%ae%93-gui-%e5%8b%95%e8%b5%b7%e4%be%86%e7%82%ba%e5%85%83%e4%bb%b6%e7%b6%81%e5%ae%9a-event-%e8%a7%b8%e7%99%bc-function/以前一節計算機介面為例，本節將加入簡單的事件綁定，以實作計算機的基本功能。產生 UI 的 SetupUi 函式中會把UI元件一一設定成 Attribute 給自己也就是 self 這個變數，因此接下來我們就可以對這些元件進行事件的綁定。這邊編輯的內容都是以 example_main.py 為基礎作修改。**事件綁定（Event Binding）**將 Function Pointer 綁在某一元件的 Signal 上，需要用 connect。以下示範幾種寫法綁定兩種事件：* 按鈕（數字鍵 b0, b1, …）被點擊 clicked 時將數字插入方程式文字列 lEquation 中* 方程式文字列 lEquation 發生改變時 print 出當下的內容**方法一: 最簡單的方法，就是一對一綁定。**```def __init__(self):    # ...    self.b0.clicked.connect(self.addNumber0)    self.lEquation.textChanged.connect(self.equationChanged)def addNumber0(self):    self.lEquation.insert('0')def equationChanged(self, text):    print('Eq=', text)```**方法二: 如果想要寫通用一點的 Function，可以使用 lambda 帶入其他參數。**```def __init__(self):    # ...    self.b0.clicked.connect(lambda: self.addNumber(0))    self.lEquation.textChanged.connect(lambda t: self.textChanged(t, 'Eq'))def addNumber(self, number):    self.lEquation.insert(str(number))def textChanged(self, text, src):    print(src, '=', text)```**善用關鍵字「pyqt Qxxx」即可在官方文件中找到各元件可用的Signal，其中的Qxxx為元件的Class類別（可以在物件屬性頁中找到）。****善用關鍵字「pyqt Qxxx」即可在官方文件中找到各元件可用的Signal，其中的Qxxx為元件的Class類別（可以在物件屬性頁中找到）。****善用關鍵字「pyqt Qxxx」即可在官方文件中找到各元件可用的Signal，其中的Qxxx為元件的Class類別（可以在物件屬性頁中找到）。**很重要所以要說三遍!#### 設定主選單相關的教學https://clay-atlas.com/blog/2019/08/31/pyqt5-%E5%9F%BA%E6%9C%AC%E6%95%99%E5%AD%B8-4-%E8%8F%9C%E5%96%AE%E3%80%81%E5%B7%A5%E5%85%B7%E6%AC%84/